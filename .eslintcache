[{"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\index.js":"1","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\App.js":"2","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\PrivateRoute.js":"3","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Dashboard\\Dashboard.js":"4","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\contexts\\AuthContext.js":"5","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Login\\Login.js":"6","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Signup\\Signup.js":"7","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\Firebase.js":"8","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Dashboard\\Chats.js":"9","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Login\\styles.js":"10","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Signup\\styles.js":"11","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Dashboard\\components\\Nav.js":"12","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Dashboard\\styles.js":"13","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Dashboard\\components\\styles.js":"14"},{"size":208,"mtime":1608144430640,"results":"15","hashOfConfig":"16"},{"size":642,"mtime":1608575255917,"results":"17","hashOfConfig":"16"},{"size":484,"mtime":1607856332760,"results":"18","hashOfConfig":"16"},{"size":567,"mtime":1608575255917,"results":"19","hashOfConfig":"16"},{"size":4390,"mtime":1608575255917,"results":"20","hashOfConfig":"16"},{"size":3076,"mtime":1608483275487,"results":"21","hashOfConfig":"16"},{"size":3444,"mtime":1608129637514,"results":"22","hashOfConfig":"16"},{"size":614,"mtime":1608621448406,"results":"23","hashOfConfig":"16"},{"size":2381,"mtime":1608575255917,"results":"24","hashOfConfig":"16"},{"size":563,"mtime":1607968491069,"results":"25","hashOfConfig":"16"},{"size":563,"mtime":1608093225836,"results":"26","hashOfConfig":"16"},{"size":6302,"mtime":1608575255917,"results":"27","hashOfConfig":"16"},{"size":1483,"mtime":1608575255917,"results":"28","hashOfConfig":"16"},{"size":2266,"mtime":1608575255917,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"6fmtb0",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\index.js",[],["61","62"],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\App.js",[],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\PrivateRoute.js",[],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Dashboard\\Dashboard.js",[],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\contexts\\AuthContext.js",[],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Login\\Login.js",[],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Signup\\Signup.js",[],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\Firebase.js",[],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Dashboard\\Chats.js",["63","64","65","66","67"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { db } from \"../../Firebase\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport useStyles from \"./styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nconst Chats = () => {\r\n  const classes = useStyles();\r\n  const chatRef = useRef();\r\n  const { roomId, username, SendMessage, messages } = useAuth();\r\n  const [newId, setNewId] = useState();\r\n  const divRef = useRef(null);\r\n\r\n  function handleClick() {\r\n    SendMessage(chatRef.current.value);\r\n  }\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Typography component=\"div\" className={classes.Typography}>\r\n        {messages.map(({ id, data }) => {\r\n          const str = data.username;\r\n          const strLength = str.length;\r\n          const chatUsername = str.slice(0, strLength - 5);\r\n          const isUser = username === str;\r\n\r\n          return (\r\n            <div ref={divRef} key={id} className={classes.messageHold}>\r\n              <p className={isUser ? classes.username : classes.otherUsername}>\r\n                {chatUsername}\r\n              </p>\r\n              <div>\r\n                <p\r\n                  key={id}\r\n                  style={{ wordBreak: \"break-all\", whiteSpace: \"normal\" }}\r\n                  className={\r\n                    isUser ? classes.messageBox : classes.otherMessageBox\r\n                  }\r\n                >\r\n                  {data.message}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </Typography>\r\n      <div className={classes.chatarea}>\r\n        <TextField\r\n          inputRef={chatRef}\r\n          className={classes.chatareaInput}\r\n          autoFocus={true}\r\n          placeholder=\"Chat Area\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            className: classes.multilineColor,\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonSend}\r\n          endIcon={<SendIcon>send</SendIcon>}\r\n          onClick={handleClick}\r\n        ></Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Login\\styles.js",[],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Signup\\styles.js",[],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Dashboard\\components\\Nav.js",["68","69"],"import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport useStyles from \"./styles\";\r\nimport firebase from \"firebase\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { db } from \"../../../Firebase\";\r\n\r\nconst Nav = () => {\r\n  const classes = useStyles();\r\n  const { logout, username, currentUser, settingRoomId } = useAuth();\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const [friendOpen, setFriendOpen] = useState(false);\r\n  const search = useRef();\r\n  const [searchFound, setSearchFound] = useState(\"\");\r\n  const [friendList, setFriendList] = useState([]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setFriendOpen(false);\r\n  };\r\n\r\n  async function handleKeyDown(e) {\r\n    if (e.key === \"Enter\") {\r\n      setOpen(true);\r\n      friendsSearch();\r\n    }\r\n  }\r\n\r\n  function handleLogout() {\r\n    try {\r\n      logout();\r\n      history.push(\"/login\");\r\n    } catch {}\r\n  }\r\n\r\n  const handleFriends = (e) => {\r\n    setFriendOpen(true);\r\n  };\r\n\r\n  const friendsSearch = () => {\r\n    if (search.current.value === \"\") {\r\n      setSearchFound(\"No users Found!\");\r\n    } else {\r\n      db.collection(\"users\")\r\n        .doc(search.current.value)\r\n        .collection(\"user-data\")\r\n        .doc(\"user-info\")\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc.exists) {\r\n            const data = doc.data();\r\n            setSearchFound(data.username);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    const currentEmail = currentUser.email;\r\n    const otherEmail = search.current.value;\r\n    const roomIdNumber = Math.floor(100000 + Math.random() * 900000);\r\n    db.collection(\"users\")\r\n      .doc(currentEmail)\r\n      .collection(\"user-data\")\r\n      .doc(\"user-friends\")\r\n      .collection(\"friend-lists\")\r\n      .doc(otherEmail)\r\n      .set({\r\n        email: otherEmail.toLowerCase(),\r\n        username: searchFound,\r\n        added: firebase.firestore.FieldValue.serverTimestamp(),\r\n        roomId: roomIdNumber,\r\n      })\r\n      .then(function () {\r\n        console.log(\"Successfully added\");\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n\r\n    db.collection(\"users\")\r\n      .doc(otherEmail)\r\n      .collection(\"user-data\")\r\n      .doc(\"user-friends\")\r\n      .collection(\"friend-lists\")\r\n      .doc(currentUser.email)\r\n      .set({\r\n        email: currentUser.email,\r\n        username: username,\r\n        added: firebase.firestore.FieldValue.serverTimestamp(),\r\n        roomId: roomIdNumber,\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.email)\r\n      .collection(\"user-data\")\r\n      .doc(\"user-friends\")\r\n      .collection(\"friend-lists\")\r\n      .onSnapshot((snapshot) => {\r\n        setFriendList(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, data: doc.data() }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const otherEmail = e.target.innerText;\r\n    settingRoomId(otherEmail);\r\n  };\r\n  return (\r\n    <div style={{ display: \"block\" }}>\r\n      <AppBar position=\"static\" className={classes.AppBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Usap {username}\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={handleKeyDown}\r\n              inputRef={search}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleFriends}>\r\n              Friends\r\n            </Button>\r\n          </Typography>\r\n\r\n          <Button color=\"inherit\" onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n        <Dialog open={open} keepMounted onClose={handleClose}>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <div>{searchFound ? searchFound : searchFound}</div>\r\n              {searchFound ? (\r\n                <PersonAddIcon\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={handleClick}\r\n                />\r\n              ) : null}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Dialog open={friendOpen} keepMounted onClose={handleClose}>\r\n          <DialogContent className={classes.dialog}>\r\n            <DialogContentText>\r\n              {friendList.map(({ id, data }) => {\r\n                const email = data.email;\r\n\r\n                return (\r\n                  <div key={id} className={classes.divMessage}>\r\n                    <form onSubmit={handleSubmit}>\r\n                      <a>{email}</a>\r\n\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonMessage}\r\n                      >\r\n                        <ChatIcon />\r\n                      </Button>\r\n                    </form>\r\n                  </div>\r\n                );\r\n              })}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Dashboard\\styles.js",[],"C:\\Users\\WildPoker\\Desktop\\WebApps\\usap\\src\\components\\Dashboard\\components\\styles.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":35,"nodeType":"76","messageId":"77","endLine":1,"endColumn":44},{"ruleId":"74","severity":1,"message":"78","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":12},{"ruleId":"74","severity":1,"message":"79","line":14,"column":11,"nodeType":"76","messageId":"77","endLine":14,"endColumn":17},{"ruleId":"74","severity":1,"message":"80","line":15,"column":10,"nodeType":"76","messageId":"77","endLine":15,"endColumn":15},{"ruleId":"74","severity":1,"message":"81","line":15,"column":17,"nodeType":"76","messageId":"77","endLine":15,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":118,"column":6,"nodeType":"84","endLine":118,"endColumn":8,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":177,"column":23,"nodeType":"88","endLine":177,"endColumn":26},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'roomId' is assigned a value but never used.","'newId' is assigned a value but never used.","'setNewId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["91"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [currentUser.email]",{"range":"94","text":"95"},[3542,3544],"[currentUser.email]"]